import org.gradle.internal.os.OperatingSystem
OperatingSystem os = OperatingSystem.current()

apply plugin: 'java'
apply plugin: 'application'

sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../core/assets"]

project.ext.mainClassName = "com.csse3200.game.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets")

task run(dependsOn: classes, type: JavaExec) {
    mainClass.set(project.mainClassName)
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    jvmArgs = os.isMacOsX() ?
        ["-Djava.util.logging.config.file=../../logging.properties", "-XstartOnFirstThread"] :
        ["-Djava.util.logging.config.file=../../logging.properties"]
}

task debug(dependsOn: classes, type: JavaExec) {
    mainClass.set(project.mainClassName)
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
    debugOptions {
        enabled = true
        port = 5005     // Port 5005 is the default port on which the IntelliJ debugger listens.
        server = true
        suspend = false
    }
}

task dist(type: Jar) {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': project.mainClassName)
    } from configurations.compile.collect { entry -> zipTree(entry) }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dist.dependsOn classes

eclipse.project.name = appName + "-desktop"
